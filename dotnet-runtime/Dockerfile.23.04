ARG UBUNTU_RELEASE=23.04
ARG USER=app UID=101 GROUP=app GID=101

FROM golang:1.18 AS chisel
RUN git clone --depth 1 -b main https://github.com/canonical/chisel /opt/chisel
WORKDIR /opt/chisel
RUN go generate internal/deb/version.go \
    && go build ./cmd/chisel

FROM ubuntu.azurecr.io/ubuntu:$UBUNTU_RELEASE@sha256:28b1a4a37e590f4c37e1f5846d12e4571bbeb248387ff74744be511b064fd40c AS builder
SHELL ["/bin/bash", "-oeux", "pipefail", "-c"]
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates git \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*
### TODO: REMOVE "git" and this, once .net7 slices are merged upstream
RUN git clone -b "ROCKS-358_dotnet7-lunar" https://github.com/cjdcordeiro/chisel-releases.git
###
COPY --from=chisel /opt/chisel/chisel /usr/bin/

FROM scratch AS image-prep
ENV \
    # Configure web servers to bind to port 8080 when present
    ASPNETCORE_URLS=http://+:8080 \
    # Enable detection of running in a container
    DOTNET_RUNNING_IN_CONTAINER=true \
    # Set the invariant mode since ICU package isn't included (see https://github.com/dotnet/announcements/issues/20)
    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true
ARG UID GID USER GROUP
USER $UID:$GID

### BOILERPLATE END ###

FROM builder AS rootfs-prep
ARG USER UID GROUP GID UBUNTU_RELEASE
RUN mkdir /rootfs \
    && chisel cut --release ./chisel-releases --root /rootfs \
        base-files_base \
        base-files_release-info \
        ca-certificates_data \
        dotnet-runtime-7.0_libs \
    # need to rename binary, otherwise:
    #  "A fatal error was encountered. Cannot execute dotnet when renamed to dotnet7."
    && mv /rootfs/usr/lib/dotnet/dotnet7 /rootfs/usr/lib/dotnet/dotnet \
    && ln -s /usr/lib/dotnet/dotnet /rootfs/usr/bin/
RUN install -d -m 0755 -o $UID -g $GID /rootfs/home/$USER \
    && echo -e "root:x:0:\n$GROUP:x:$GID:" >/rootfs/etc/group \
    && echo -e "root:x:0:0:root:/root:/noshell\n$USER:x:$UID:$GID::/home/$USER:/noshell" >/rootfs/etc/passwd
    
FROM image-prep
ARG USER UID GROUP GID
COPY --from=rootfs-prep /rootfs /
# Workaround for https://github.com/moby/moby/issues/38710
COPY --from=rootfs-prep --chown=$UID:$GID /rootfs/home/$USER /home/$USER
ENTRYPOINT ["/usr/bin/dotnet"]
CMD ["--info"]
