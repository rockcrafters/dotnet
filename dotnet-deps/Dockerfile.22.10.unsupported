ARG UBUNTU_RELEASE=22.10
ARG USER=app UID=101 GROUP=app GID=101

FROM golang:1.21 AS chisel
RUN git clone --depth 1 -b main https://github.com/canonical/chisel /opt/chisel
WORKDIR /opt/chisel
RUN go generate internal/deb/version.go \
    && go build ./cmd/chisel
ADD "https://raw.githubusercontent.com/canonical/rocks-toolbox/main/chisel-wrapper" chisel-wrapper
RUN chmod +x chisel-wrapper

FROM ubuntu.azurecr.io/ubuntu:$UBUNTU_RELEASE@sha256:f4fff793fd398eb81092fa370a7db63f0a518c832d6de50146ab048b8ea0e9ed AS builder
SHELL ["/bin/bash", "-oeux", "pipefail", "-c"]
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates file \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*
COPY --from=chisel /opt/chisel/chisel /usr/bin/
COPY --from=chisel /opt/chisel/chisel-wrapper /usr/bin/

FROM builder AS rootfs-prep
ARG USER UID GROUP GID
RUN mkdir -p /rootfs/etc \
    && install -d -m 0755 -o $UID -g $GID /rootfs/home/$USER \
    && echo -e "root:x:0:\n$GROUP:x:$GID:" >/rootfs/etc/group \
    && echo -e "root:x:0:0:root:/root:/noshell\n$USER:x:$UID:$GID::/home/$USER:/noshell" >/rootfs/etc/passwd

FROM scratch AS image-prep
ENV \
    # Configure web servers to bind to port 8080 when present
    ASPNETCORE_URLS=http://+:8080 \
    # Enable detection of running in a container
    DOTNET_RUNNING_IN_CONTAINER=true \
    # Set the invariant mode since ICU package isn't included (see https://github.com/dotnet/announcements/issues/20)
    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true
ARG UID GID
USER $UID:$GID

### BOILERPLATE END ###

FROM rootfs-prep AS sliced-deps
ARG UBUNTU_RELEASE
RUN chisel-wrapper --generate-dpkg-status /status -- --release "ubuntu-$UBUNTU_RELEASE" --root /rootfs \
    base-files_base \
    base-files_release-info \
    ca-certificates_data \
    libc6_libs \
    libgcc-s1_libs \
    libssl3_libs \
    libstdc++6_libs \
    zlib1g_libs

FROM scratch AS sbom-prep
COPY --from=sliced-deps /rootfs /
COPY --from=sliced-deps /status /var/lib/dpkg/status

FROM image-prep
ARG USER UID GROUP GID
COPY --from=sliced-deps /rootfs /
# Workaround for https://github.com/moby/moby/issues/38710
COPY --from=sliced-deps --chown=$UID:$GID /rootfs/home/$USER /home/$USER
