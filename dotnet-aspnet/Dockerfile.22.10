ARG UBUNTU_RELEASE=22.10
ARG USER=app UID=101 GROUP=app GID=101

FROM golang:1.18 AS chisel
RUN git clone --depth 1 -b main https://github.com/canonical/chisel /opt/chisel
WORKDIR /opt/chisel
RUN go generate internal/deb/version.go \
    && go build ./cmd/chisel

FROM ubuntu.azurecr.io/ubuntu:$UBUNTU_RELEASE@sha256:4bbd3b5e2a496751e7e5fcb20957d1bdfacff59cc4d4c1243a3a644046f34dd7 AS builder
SHELL ["/bin/bash", "-oeux", "pipefail", "-c"]
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*
COPY --from=chisel /opt/chisel/chisel /usr/bin/

FROM builder AS rootfs-prep
ARG USER UID GROUP GID
RUN mkdir -p /rootfs/etc \
    && install -d -m 0755 -o $UID -g $GID /rootfs/home/$USER \
    && echo -e "root:x:0:\n$GROUP:x:$GID:" >/rootfs/etc/group \
    && echo -e "root:x:0:0:root:/root:/noshell\n$USER:x:$UID:$GID::/home/$USER:/noshell" >/rootfs/etc/passwd

FROM scratch AS image-prep
ENV \
    # Configure web servers to bind to port 8080 when present
    ASPNETCORE_URLS=http://+:8080 \
    # Enable detection of running in a container
    DOTNET_RUNNING_IN_CONTAINER=true
ARG UID GID
USER $UID:$GID

### BOILERPLATE END ###

FROM rootfs-prep AS sliced-aspnet
ARG UBUNTU_RELEASE
RUN chisel cut --release "ubuntu-$UBUNTU_RELEASE" --root /rootfs \
    base-files_base \
    base-files_release-info \
    ca-certificates_data \
    aspnetcore-runtime-6.0_libs \
    && mkdir -p /rootfs/usr/bin \
    && ln -s /usr/lib/dotnet/dotnet /rootfs/usr/bin/

FROM image-prep
ARG USER UID GROUP GID

COPY --from=sliced-aspnet /rootfs /

# Workaround for https://github.com/moby/moby/issues/38710
COPY --from=sliced-aspnet --chown=$UID:$GID /rootfs/home/$USER /home/$USER

ENTRYPOINT ["/usr/bin/dotnet"]
CMD ["--info"]
